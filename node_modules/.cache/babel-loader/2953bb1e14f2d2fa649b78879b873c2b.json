{"ast":null,"code":"import _classCallCheck from \"G:\\\\Projects\\\\Course\\\\Udacity\\\\Course_Project\\\\Done\\\\Neigborhood-Map-React\\\\Neighborhood-Map-React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\Projects\\\\Course\\\\Udacity\\\\Course_Project\\\\Done\\\\Neigborhood-Map-React\\\\Neighborhood-Map-React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\Projects\\\\Course\\\\Udacity\\\\Course_Project\\\\Done\\\\Neigborhood-Map-React\\\\Neighborhood-Map-React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\Projects\\\\Course\\\\Udacity\\\\Course_Project\\\\Done\\\\Neigborhood-Map-React\\\\Neighborhood-Map-React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\Projects\\\\Course\\\\Udacity\\\\Course_Project\\\\Done\\\\Neigborhood-Map-React\\\\Neighborhood-Map-React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\Projects\\\\Course\\\\Udacity\\\\Course_Project\\\\Done\\\\Neigborhood-Map-React\\\\Neighborhood-Map-React\\\\src\\\\components\\\\content.js\";\nimport React, { Component } from 'react';\nimport Map from './map';\nimport List from './list';\nimport * as Fetch from './Fetch';\n\nvar Contents =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Contents, _Component);\n\n  function Contents() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Contents);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Contents)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      locations: [],\n      allLocations: [],\n      query: \"\"\n    };\n\n    _this.setContens = function (location) {\n      return \"\\n            <div>\\n                <h3 className=\\\"title\\\">Name: \".concat(location.venue.name, \"</h3>\\n                <p className=\\\"address\\\">Address: \").concat(location.venue.location.address, \"</p>\\n            </div>\\n            \");\n    };\n\n    _this.infoClick = function (location) {\n      var _loop = function _loop(i) {\n        if (location.venue.id === window.markers[i].title) {\n          var contents = _this.setContens(location);\n\n          window.infowindow.setContent(contents);\n          window.infowindow.open(window.map, window.markers[i]);\n          window.markers[i].setAnimation(window.google.maps.Animation.BOUNCE);\n          setTimeout(function () {\n            window.markers[i].setAnimation(null);\n          }, 1000);\n        }\n      };\n\n      for (var i = 0; i < window.markers.length; i++) {\n        _loop(i);\n      }\n    };\n\n    _this.filterLocations = function (query, locations) {\n      return locations.filter(function (location) {\n        return location.venue.name.toLowerCase().includes(query.toLowerCase());\n      });\n    };\n\n    _this.inputChange = function (query) {\n      _this.setState({\n        query: query\n      });\n\n      if (query) {\n        _this.setState({\n          locations: _this.filterLocations(query, _this.state.locations)\n        });\n      } else {\n        _this.setState({\n          locations: _this.state.allLocations\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Contents, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Fetch.getLocationDetails().then(function (locations) {\n        return _this2.setState({\n          locations: locations,\n          allLocations: locations\n        });\n      });\n    } // set content for InfoWindow\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        role: \"main\",\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(List, {\n        locations: this.state.locations,\n        inputChange: this.inputChange,\n        showInfo: this.infoClick,\n        query: this.state.query,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Map, {\n        locations: this.state.locations,\n        setContens: this.setContens,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Contents;\n}(Component);\n\nexport { Contents as default };\n;","map":{"version":3,"sources":["G:\\Projects\\Course\\Udacity\\Course_Project\\Done\\Neigborhood-Map-React\\Neighborhood-Map-React\\src\\components\\content.js"],"names":["React","Component","Map","List","Fetch","Contents","state","locations","allLocations","query","setContens","location","venue","name","address","infoClick","i","id","window","markers","title","contents","infowindow","setContent","open","map","setAnimation","google","maps","Animation","BOUNCE","setTimeout","length","filterLocations","filter","toLowerCase","includes","inputChange","setState","getLocationDetails","then"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Map from './map';\r\nimport List from './list';\r\nimport * as Fetch from './Fetch';\r\n\r\nexport default class Contents extends Component{\r\n    state = {\r\n        locations: [],\r\n        allLocations: [],\r\n        query: \"\"\r\n    }\r\n\r\n    componentDidMount(){\r\n        Fetch.getLocationDetails()\r\n        .then(locations => this.setState({locations, allLocations: locations}))\r\n    }\r\n\r\n    // set content for InfoWindow\r\n    setContens = (location) =>{\r\n        return(\r\n            `\r\n            <div>\r\n                <h3 className=\"title\">Name: ${location.venue.name}</h3>\r\n                <p className=\"address\">Address: ${location.venue.location.address}</p>\r\n            </div>\r\n            `\r\n        )\r\n    }\r\n\r\n    infoClick = (location) => {\r\n        for(let i = 0; i < window.markers.length; i++){\r\n            if(location.venue.id === window.markers[i].title){\r\n                let contents = this.setContens(location);\r\n                window.infowindow.setContent(contents)\r\n                window.infowindow.open(window.map, window.markers[i])\r\n\r\n                window.markers[i].setAnimation(window.google.maps.Animation.BOUNCE)\r\n                    setTimeout(function(){\r\n                        window.markers[i].setAnimation(null)\r\n                    },1000)\r\n            }\r\n        }\r\n    }\r\n\r\n    filterLocations = (query, locations) => {\r\n        return(\r\n            locations.filter(location => location.venue.name.toLowerCase().includes(query.toLowerCase()))\r\n        )\r\n    }\r\n\r\n    inputChange = (query) => {\r\n        this.setState({query});\r\n        if(query){\r\n            this.setState({\r\n                locations: this.filterLocations(query, this.state.locations)\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                locations: this.state.allLocations\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div role=\"main\" className=\"container\">\r\n                <List \r\n                    locations={this.state.locations}\r\n                    inputChange={this.inputChange}\r\n                    showInfo={this.infoClick}\r\n                    query={this.state.query}\r\n                />\r\n                <Map \r\n                    locations={this.state.locations}\r\n                    setContens={this.setContens}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}